{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport App from 'next/app';\nimport Head from 'next/head';\nimport '@shopify/polaris/styles.css';\nimport { AppProvider } from '@shopify/polaris';\nimport { Provider } from '@shopify/app-bridge-react';\nimport translations from '@shopify/polaris/locales/en.json';\nimport Cookies from 'js-cookie';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { ApolloProvider as ApolloHooksProvider } from '@apollo/react-hooks'; // const dotenv = require('dotenv');\n// const { SHOPIFY_API_KEY } = process.env;\n\nvar client = new ApolloClient({\n  fetchOptions: {\n    credentials: 'include'\n  }\n});\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      var config = {\n        apiKey: API_KEY,\n        shopOrigin: Cookies.get('shopOrigin'),\n        forceRedirect: true\n      };\n      return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Sample App\"), __jsx(\"meta\", {\n        charSet: \"utf-8\"\n      })), __jsx(Provider, {\n        config: config\n      }, __jsx(AppProvider, {\n        i18n: translations\n      }, __jsx(ApolloProvider, {\n        client: client\n      }, __jsx(ApolloHooksProvider, {\n        client: client\n      }, __jsx(Component, pageProps))))));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/ms/Dev/shopify-apps/sample-shopify-app/pages/_app.js"],"names":["App","Head","AppProvider","Provider","translations","Cookies","ApolloClient","ApolloProvider","ApolloHooksProvider","client","fetchOptions","credentials","MyApp","props","Component","pageProps","config","apiKey","API_KEY","shopOrigin","get","forceRedirect"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,6BAAP;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASA,cAAc,IAAIC,mBAA3B,QAAsD,qBAAtD,C,CAEA;AACA;;AAEA,IAAMC,MAAM,GAAG,IAAIH,YAAJ,CAAiB;AAC5BI,EAAAA,YAAY,EAAE;AACVC,IAAAA,WAAW,EAAE;AADH;AADc,CAAjB,CAAf;;IAMMC,K;;;;;;;;;;;;;6BACO;AAAA,wBAE4B,KAAKC,KAFjC;AAAA,UAEGC,SAFH,eAEGA,SAFH;AAAA,UAEcC,SAFd,eAEcA,SAFd;AAGL,UAAMC,MAAM,GAAG;AAACC,QAAAA,MAAM,EAAEC,OAAT;AAAkBC,QAAAA,UAAU,EAAEd,OAAO,CAACe,GAAR,CAAY,YAAZ,CAA9B;AAAyDC,QAAAA,aAAa,EAAE;AAAxE,OAAf;AAEA,aACI,MAAC,KAAD,CAAO,QAAP,QACI,MAAC,IAAD,QACI,kCADJ,EAEI;AAAM,QAAA,OAAO,EAAC;AAAd,QAFJ,CADJ,EAKI,MAAC,QAAD;AAAU,QAAA,MAAM,EAAEL;AAAlB,SACI,MAAC,WAAD;AAAa,QAAA,IAAI,EAAEZ;AAAnB,SACI,MAAC,cAAD;AAAgB,QAAA,MAAM,EAAEK;AAAxB,SACA,MAAC,mBAAD;AAAqB,QAAA,MAAM,EAAEA;AAA7B,SACI,MAAC,SAAD,EAAeM,SAAf,CADJ,CADA,CADJ,CADJ,CALJ,CADJ;AAiBH;;;;EAvBef,G;;AA0BpB,eAAeY,KAAf","sourcesContent":["import App from 'next/app';\nimport Head from 'next/head';\nimport '@shopify/polaris/styles.css';\nimport { AppProvider } from '@shopify/polaris';\nimport { Provider } from '@shopify/app-bridge-react';\nimport translations from '@shopify/polaris/locales/en.json';\nimport Cookies from 'js-cookie';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { ApolloProvider as ApolloHooksProvider } from '@apollo/react-hooks'\n\n// const dotenv = require('dotenv');\n// const { SHOPIFY_API_KEY } = process.env;\n\nconst client = new ApolloClient({\n    fetchOptions: {\n        credentials: 'include'\n    }\n});\n\nclass MyApp extends App {\n    render() {\n        \n        const { Component, pageProps } = this.props;\n        const config = {apiKey: API_KEY, shopOrigin: Cookies.get('shopOrigin'), forceRedirect: true};\n\n        return (\n            <React.Fragment>\n                <Head>\n                    <title>Sample App</title>\n                    <meta charSet=\"utf-8\" />\n                </Head>\n                <Provider config={config}>\n                    <AppProvider i18n={translations}>\n                        <ApolloProvider client={client}>\n                        <ApolloHooksProvider client={client}>\n                            <Component {...pageProps} />\n                        </ApolloHooksProvider>\n                        </ApolloProvider>\n                    </AppProvider>\n                </Provider>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}