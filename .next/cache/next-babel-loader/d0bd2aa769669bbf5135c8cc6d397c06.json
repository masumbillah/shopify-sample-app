{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { EmptyState, Layout, Page } from '@shopify/polaris';\nimport { ResourcePicker, TitleBar } from '@shopify/app-bridge-react';\nimport PropductList from '../components/ProductList';\nvar img = \"https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg\";\n\nvar store = require(\"store-js\");\n\nfunction Index() {\n  _s();\n\n  var _useState = useState({\n    open: false\n  }),\n      modal = _useState[0],\n      setModal = _useState[1];\n\n  var isEmptyState = !store.get('ids');\n\n  var handleSelection = function handleSelection(resources) {\n    var selection = resources && resources.selection ? resources.selection : [];\n    var productIds = selection.map(function (product) {\n      return product.id;\n    });\n    setModal({\n      open: false\n    });\n    store.set(\"ids\", productIds);\n    console.log(\"productIds\", store.get(\"ids\"));\n  };\n\n  console.log(\"isEmptyState\", isEmptyState);\n  return __jsx(Page, null, __jsx(ResourcePicker, {\n    resourceType: \"Product\",\n    showVariants: false,\n    open: modal.open,\n    onSelection: function onSelection(resources) {\n      return handleSelection(resources);\n    },\n    onCancel: function onCancel() {\n      return setModal({\n        open: false\n      });\n    }\n  }), __jsx(Layout, null, isEmptyState ? __jsx(EmptyState, {\n    heading: \"Manage your inventory transfers\",\n    action: {\n      content: 'Select products',\n      onAction: function onAction() {\n        return setModal({\n          open: true\n        });\n      }\n    },\n    secondaryAction: {\n      url: 'https://help.shopify.com'\n    },\n    image: img\n  }) : __jsx(PropductList, null)));\n}\n\n_s(Index, \"6vd7uLpZ07cfW854nyoN0ytn9zc=\");\n\n_c = Index;\n;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/ms/Dev/shopify-apps/sample-shopify-app/pages/index.js"],"names":["React","useState","EmptyState","Layout","Page","ResourcePicker","TitleBar","PropductList","img","store","require","Index","open","modal","setModal","isEmptyState","get","handleSelection","resources","selection","productIds","map","product","id","set","console","log","content","onAction","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,IAA7B,QAAyC,kBAAzC;AACA,SAASC,cAAT,EAAyBC,QAAzB,QAAyC,2BAAzC;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AAEA,IAAMC,GAAG,GAAG,mEAAZ;;AACA,IAAMC,KAAK,GAAGC,OAAO,CAAC,UAAD,CAArB;;AAEA,SAASC,KAAT,GAAgB;AAAA;;AAAA,kBAEcV,QAAQ,CAAC;AAACW,IAAAA,IAAI,EAAC;AAAN,GAAD,CAFtB;AAAA,MAELC,KAFK;AAAA,MAEEC,QAFF;;AAGZ,MAAMC,YAAY,GAAG,CAACN,KAAK,CAACO,GAAN,CAAU,KAAV,CAAtB;;AAED,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,SAAD,EAAc;AACjC,QAAMC,SAAS,GAAGD,SAAS,IAAIA,SAAS,CAACC,SAAvB,GAAkCD,SAAS,CAACC,SAA5C,GAAsD,EAAxE;AACA,QAAMC,UAAU,GAAGD,SAAS,CAACE,GAAV,CAAc,UAAAC,OAAO,EAAG;AAAE,aAAOA,OAAO,CAACC,EAAf;AAAmB,KAA7C,CAAnB;AACAT,IAAAA,QAAQ,CAAC;AAACF,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACAH,IAAAA,KAAK,CAACe,GAAN,CAAU,KAAV,EAAiBJ,UAAjB;AAEAK,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BjB,KAAK,CAACO,GAAN,CAAU,KAAV,CAA1B;AACH,GAPF;;AASCS,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BX,YAA5B;AAEA,SACI,MAAC,IAAD,QACS,MAAC,cAAD;AACP,IAAA,YAAY,EAAC,SADN;AAEP,IAAA,YAAY,EAAE,KAFP;AAGP,IAAA,IAAI,EAAEF,KAAK,CAACD,IAHL;AAIP,IAAA,WAAW,EAAE,qBAACM,SAAD;AAAA,aAAeD,eAAe,CAACC,SAAD,CAA9B;AAAA,KAJN;AAKP,IAAA,QAAQ,EAAE;AAAA,aAAMJ,QAAQ,CAAC;AAAEF,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAd;AAAA;AALH,IADT,EAQI,MAAC,MAAD,QAEQG,YAAY,GACZ,MAAC,UAAD;AACI,IAAA,OAAO,EAAC,iCADZ;AAEI,IAAA,MAAM,EAAE;AACJY,MAAAA,OAAO,EAAE,iBADL;AAEJC,MAAAA,QAAQ,EAAE;AAAA,eAAMd,QAAQ,CAAC;AAAEF,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAd;AAAA;AAFN,KAFZ;AAMI,IAAA,eAAe,EAAE;AAACiB,MAAAA,GAAG,EAAE;AAAN,KANrB;AAOI,IAAA,KAAK,EAAIrB;AAPb,IADY,GAUI,MAAC,YAAD,OAZxB,CARJ,CADJ;AA4BH;;GA5CQG,K;;KAAAA,K;AA4CR;AAED,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport { EmptyState, Layout, Page } from '@shopify/polaris';\nimport { ResourcePicker, TitleBar } from '@shopify/app-bridge-react';\nimport PropductList from '../components/ProductList';\n\nconst img = \"https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg\";\nconst store = require(\"store-js\");\n\nfunction Index(){\n\n    const [modal, setModal] = useState({open:false});\n    const isEmptyState = !store.get('ids');\n\n   const handleSelection = (resources) =>{\n        const selection = resources && resources.selection? resources.selection:[];\n        const productIds = selection.map(product=> { return product.id });\n        setModal({open: false});\n        store.set(\"ids\", productIds);\n\n        console.log(\"productIds\", store.get(\"ids\"));\n    };\n    \n    console.log(\"isEmptyState\", isEmptyState);\n\n    return (\n        <Page>\n                 <ResourcePicker\n          resourceType=\"Product\"\n          showVariants={false}\n          open={modal.open}\n          onSelection={(resources) => handleSelection(resources)}\n          onCancel={() => setModal({ open: false })}\n        />\n            <Layout>\n                {\n                    isEmptyState? \n                    <EmptyState\n                        heading=\"Manage your inventory transfers\"\n                        action={{\n                            content: 'Select products',\n                            onAction: () => setModal({ open: true }),\n                        }}\n                        secondaryAction={{url: 'https://help.shopify.com'}}\n                        image = {img}\n                        >\n                    </EmptyState> : <PropductList/>\n                }\n\n            \n            </Layout>\n        </Page>\n    )\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}