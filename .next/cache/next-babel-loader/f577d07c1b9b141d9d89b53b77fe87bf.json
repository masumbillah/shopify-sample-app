{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery getProducts($ids: [ID!]!) {\\n\\tnodes(ids: $ids){\\n    ... on Product {\\n      title\\n      handle\\n      id\\n      images(first:5) {\\n        edges{\\n          node{\\n            originalSrc\\n            altText\\n          }\\n        }\\n      }\\n      variants(first:5){\\n        edges{\\n          node{\\n            id\\n            price\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nimport { useQuery } from '@apollo/react-hook';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nvar GET_PRODUCT_LIST_BY_IDS = gql(_templateObject());\n\nfunction ProductList() {\n  _s();\n\n  var _useQuery = useQuery(GET_PRODUCTS_BY_ID, {\n    variables: {\n      ids: store.get('ids')\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"div\", null, \"Loading...\");\n  if (error) return __jsx(\"div\", null, error.message);\n  return __jsx(React.Fragment, null, __jsx(Card, null, __jsx(ResourceList, {\n    showHeader: true,\n    resourceName: {\n      singular: 'Product',\n      plural: 'Products'\n    },\n    items: data.nodes,\n    renderItem: function renderItem(item) {\n      var media = __jsx(Thumbnail, {\n        source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : '',\n        alt: item.images.edges[0] ? item.images.edges[0].altText : ''\n      });\n\n      var price = item.variants.edges[0].node.price;\n      return __jsx(ResourceList.Item, {\n        id: item.id,\n        media: media,\n        accessibilityLabel: \"View details for \".concat(item.title)\n      }, __jsx(Stack, null, __jsx(Stack.Item, {\n        fill: true\n      }, __jsx(\"h3\", null, __jsx(TextStyle, {\n        variation: \"strong\"\n      }, item.title))), __jsx(Stack.Item, null, __jsx(\"p\", null, \"$\", price))));\n    }\n  })));\n}\n\n_s(ProductList, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = ProductList;\nexport default ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["/Users/ms/Dev/shopify-apps/sample-shopify-app/components/ProductList.js"],"names":["gql","useQuery","Card","ResourceList","Stack","TextStyle","Thumbnail","GET_PRODUCT_LIST_BY_IDS","ProductList","GET_PRODUCTS_BY_ID","variables","ids","store","get","loading","error","data","message","singular","plural","nodes","item","media","images","edges","node","originalSrc","altText","price","variants","id","title"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,KAA7B,EAAoCC,SAApC,EAA+CC,SAA/C,QAAgE,kBAAhE;AAEA,IAAMC,uBAAuB,GAAGP,GAAH,mBAA7B;;AA4BA,SAASQ,WAAT,GAAuB;AAAA;;AAAA,kBAEcP,QAAQ,CAACQ,kBAAD,EAAqB;AAAEC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,GAAG,EAAEC,KAAK,CAACC,GAAN,CAAU,KAAV;AAAP;AAAb,GAArB,CAFtB;AAAA,MAEXC,OAFW,aAEXA,OAFW;AAAA,MAEFC,KAFE,aAEFA,KAFE;AAAA,MAEKC,IAFL,aAEKA,IAFL;;AAKnB,MAAIF,OAAJ,EAAa,OAAO,gCAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,mBAAMA,KAAK,CAACE,OAAZ,CAAP;AAEX,SACE,4BACE,MAAC,IAAD,QACE,MAAC,YAAD;AACE,IAAA,UAAU,MADZ;AAEE,IAAA,YAAY,EAAE;AAAEC,MAAAA,QAAQ,EAAE,SAAZ;AAAuBC,MAAAA,MAAM,EAAE;AAA/B,KAFhB;AAGE,IAAA,KAAK,EAAEH,IAAI,CAACI,KAHd;AAIE,IAAA,UAAU,EAAE,oBAAAC,IAAI,EAAI;AAClB,UAAMC,KAAK,GACT,MAAC,SAAD;AACE,QAAA,MAAM,EACJD,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IAAuBH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,IAArB,CAA0BC,WAAjD,GAA+D,EAFnE;AAIE,QAAA,GAAG,EACDL,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IAAuBH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBG,OAA5C,GAAsD;AAL1D,QADF;;AAUA,UAAMC,KAAK,GAAGP,IAAI,CAACQ,QAAL,CAAcL,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BG,KAA1C;AACA,aACE,MAAC,YAAD,CAAc,IAAd;AACE,QAAA,EAAE,EAAEP,IAAI,CAACS,EADX;AAEE,QAAA,KAAK,EAAER,KAFT;AAGE,QAAA,kBAAkB,6BAAsBD,IAAI,CAACU,KAA3B;AAHpB,SAKE,MAAC,KAAD,QACE,MAAC,KAAD,CAAO,IAAP;AAAY,QAAA,IAAI;AAAhB,SACE,kBACE,MAAC,SAAD;AAAW,QAAA,SAAS,EAAC;AAArB,SACGV,IAAI,CAACU,KADR,CADF,CADF,CADF,EAQE,MAAC,KAAD,CAAO,IAAP,QACE,sBAAKH,KAAL,CADF,CARF,CALF,CADF;AAoBD;AApCH,IADF,CADF,CADF;AA4CD;;GApDMpB,W;UAE4BP,Q;;;KAF5BO,W;AAsDP,eAAeA,WAAf","sourcesContent":["import gql from \"graphql-tag\";\nimport { useQuery } from '@apollo/react-hook';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\n\nconst GET_PRODUCT_LIST_BY_IDS = gql`\nquery getProducts($ids: [ID!]!) {\n\tnodes(ids: $ids){\n    ... on Product {\n      title\n      handle\n      id\n      images(first:5) {\n        edges{\n          node{\n            originalSrc\n            altText\n          }\n        }\n      }\n      variants(first:5){\n        edges{\n          node{\n            id\n            price\n          }\n        }\n      }\n    }\n  }\n}`;\n\n\nfunction ProductList() {\n\n    const { loading, error, data } = useQuery(GET_PRODUCTS_BY_ID, { variables: { ids: store.get('ids') } })\n  \n  \n    if (loading) return <div>Loading...</div>\n    if (error) return <div>{error.message}</div>\n  \n    return (\n      <>\n        <Card>\n          <ResourceList\n            showHeader\n            resourceName={{ singular: 'Product', plural: 'Products' }}\n            items={data.nodes}\n            renderItem={item => {\n              const media = (\n                <Thumbnail\n                  source={\n                    item.images.edges[0] ? item.images.edges[0].node.originalSrc : ''\n                  }\n                  alt={\n                    item.images.edges[0] ? item.images.edges[0].altText : ''\n                  }\n                />\n              );\n              const price = item.variants.edges[0].node.price;\n              return (\n                <ResourceList.Item\n                  id={item.id}\n                  media={media}\n                  accessibilityLabel={`View details for ${item.title}`}\n                >\n                  <Stack>\n                    <Stack.Item fill>\n                      <h3>\n                        <TextStyle variation='strong'>\n                          {item.title}\n                        </TextStyle>\n                      </h3>\n                    </Stack.Item>\n                    <Stack.Item>\n                      <p>${price}</p>\n                    </Stack.Item>\n                  </Stack>\n                </ResourceList.Item>\n              )\n            }}\n          />\n        </Card>\n      </>\n    )\n  }\n  \n  export default ProductList;"]},"metadata":{},"sourceType":"module"}