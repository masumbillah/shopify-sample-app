{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport App from 'next/app';\nimport Head from 'next/head';\nimport '@shopify/polaris/styles.css';\nimport { AppProvider } from '@shopify/polaris';\nimport { Provider } from '@shopify/app-bridge-react';\nimport translations from '@shopify/polaris/locales/en.json';\nimport Cookies from 'js-cookie';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { ApolloProvider as ApolloHooksProvider } from '@apollo/react-hooks'; // const dotenv = require('dotenv');\n// const { SHOPIFY_API_KEY } = process.env;\n\nconst client = new ApolloClient({\n  fetchOptions: {\n    credentials: 'include'\n  }\n});\n\nclass MyApp extends App {\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    const config = {\n      apiKey: API_KEY,\n      shopOrigin: Cookies.get('shopOrigin'),\n      forceRedirect: true\n    };\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Sample App\"), __jsx(\"meta\", {\n      charSet: \"utf-8\"\n    })), __jsx(Provider, {\n      config: config\n    }, __jsx(AppProvider, {\n      i18n: translations\n    }, __jsx(ApolloProvider, {\n      client: client\n    }, __jsx(ApolloHooksProvider, {\n      client: client\n    }, __jsx(Component, pageProps))))));\n  }\n\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/ms/Dev/shopify-apps/sample-shopify-app/pages/_app.js"],"names":["App","Head","AppProvider","Provider","translations","Cookies","ApolloClient","ApolloProvider","ApolloHooksProvider","client","fetchOptions","credentials","MyApp","render","Component","pageProps","props","config","apiKey","API_KEY","shopOrigin","get","forceRedirect"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,6BAAP;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASA,cAAc,IAAIC,mBAA3B,QAAsD,qBAAtD,C,CAEA;AACA;;AAEA,MAAMC,MAAM,GAAG,IAAIH,YAAJ,CAAiB;AAC5BI,EAAAA,YAAY,EAAE;AACVC,IAAAA,WAAW,EAAE;AADH;AADc,CAAjB,CAAf;;AAMA,MAAMC,KAAN,SAAoBZ,GAApB,CAAwB;AACpBa,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2B,KAAKC,KAAtC;AACA,UAAMC,MAAM,GAAG;AAACC,MAAAA,MAAM,EAAEC,OAAT;AAAkBC,MAAAA,UAAU,EAAEf,OAAO,CAACgB,GAAR,CAAY,YAAZ,CAA9B;AAAyDC,MAAAA,aAAa,EAAE;AAAxE,KAAf;AAEA,WACI,MAAC,KAAD,CAAO,QAAP,QACI,MAAC,IAAD,QACI,kCADJ,EAEI;AAAM,MAAA,OAAO,EAAC;AAAd,MAFJ,CADJ,EAKI,MAAC,QAAD;AAAU,MAAA,MAAM,EAAEL;AAAlB,OACI,MAAC,WAAD;AAAa,MAAA,IAAI,EAAEb;AAAnB,OACI,MAAC,cAAD;AAAgB,MAAA,MAAM,EAAEK;AAAxB,OACA,MAAC,mBAAD;AAAqB,MAAA,MAAM,EAAEA;AAA7B,OACI,MAAC,SAAD,EAAeM,SAAf,CADJ,CADA,CADJ,CADJ,CALJ,CADJ;AAiBH;;AAvBmB;;AA0BxB,eAAeH,KAAf","sourcesContent":["import App from 'next/app';\nimport Head from 'next/head';\nimport '@shopify/polaris/styles.css';\nimport { AppProvider } from '@shopify/polaris';\nimport { Provider } from '@shopify/app-bridge-react';\nimport translations from '@shopify/polaris/locales/en.json';\nimport Cookies from 'js-cookie';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { ApolloProvider as ApolloHooksProvider } from '@apollo/react-hooks'\n\n// const dotenv = require('dotenv');\n// const { SHOPIFY_API_KEY } = process.env;\n\nconst client = new ApolloClient({\n    fetchOptions: {\n        credentials: 'include'\n    }\n});\n\nclass MyApp extends App {\n    render() {\n        \n        const { Component, pageProps } = this.props;\n        const config = {apiKey: API_KEY, shopOrigin: Cookies.get('shopOrigin'), forceRedirect: true};\n\n        return (\n            <React.Fragment>\n                <Head>\n                    <title>Sample App</title>\n                    <meta charSet=\"utf-8\" />\n                </Head>\n                <Provider config={config}>\n                    <AppProvider i18n={translations}>\n                        <ApolloProvider client={client}>\n                        <ApolloHooksProvider client={client}>\n                            <Component {...pageProps} />\n                        </ApolloHooksProvider>\n                        </ApolloProvider>\n                    </AppProvider>\n                </Provider>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}